// src/components/ReportGenerator.jsx
import { useRef } from 'react'
import html2canvas from 'html2canvas'
import jsPDF from 'jspdf'
import { DocumentArrowDownIcon, XMarkIcon } from '@heroicons/react/24/solid'

export default function ReportGenerator({ scanData, onClose }) {
  const reportRef = useRef(null)

  const generatePDF = async () => {
    const input = reportRef.current
    const canvas = await html2canvas(input, { scale: 2 })
    const imgData = canvas.toDataURL('image/png')
    
    const pdf = new jsPDF('p', 'mm', 'a4')
    const imgWidth = 190
    const imgHeight = (canvas.height * imgWidth) / canvas.width
    
    pdf.addImage(imgData, 'PNG', 10, 10, imgWidth, imgHeight)
    pdf.save(`security-scan-report-${scanData.scanId}.pdf`)
  }

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-xl shadow-2xl max-w-4xl w-full relative">
        <button
          onClick={onClose}
          className="absolute top-4 right-4 p-2 hover:bg-gray-100 rounded-full"
        >
          <XMarkIcon className="w-6 h-6 text-gray-600" />
        </button>

        <div ref={reportRef} className="p-8 report-template">
          {/* Report Header */}
          <div className="text-center mb-8">
            <div className="flex items-center justify-center gap-3 mb-4">
              <DocumentArrowDownIcon className="w-12 h-12 text-blue-600" />
              <h1 className="text-3xl font-bold text-gray-800">
                Security Scan Report
              </h1>
            </div>
            <div className="flex justify-center gap-4 text-sm text-gray-600">
              <p>Generated: {new Date().toLocaleDateString()}</p>
              <p>Scan ID: {scanData.scanId}</p>
            </div>
          </div>

          {/* Scan Overview */}
          <div className="mb-8">
            <h2 className="text-xl font-semibold mb-4 text-blue-600">Scan Overview</h2>
            <div className="grid grid-cols-2 gap-4 mb-4">
              <div className="p-4 bg-gray-50 rounded-lg">
                <p className="font-medium">Scanned URL</p>
                <p className="text-gray-600 break-all">{scanData.url}</p>
              </div>
              <div className="p-4 bg-gray-50 rounded-lg">
                <p className="font-medium">Scan Duration</p>
                <p className="text-gray-600">{scanData.duration}s</p>
              </div>
            </div>
          </div>

          {/* Security Findings */}
          <div className="mb-8">
            <h2 className="text-xl font-semibold mb-4 text-blue-600">Security Findings</h2>
            <div className="space-y-4">
              {scanData.vulnerabilities.map((vuln, index) => (
                <div key={index} className="p-4 border-l-4 border-red-500 bg-red-50 rounded-lg">
                  <div className="flex justify-between items-start">
                    <div>
                      <h3 className="font-medium text-red-700">{vuln.title}</h3>
                      <p className="text-sm text-gray-600">{vuln.description}</p>
                    </div>
                    <span className="px-3 py-1 bg-red-100 text-red-700 rounded-full text-sm">
                      {vuln.severity}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Security Headers */}
          <div className="mb-8">
            <h2 className="text-xl font-semibold mb-4 text-blue-600">Security Headers</h2>
            <div className="grid grid-cols-3 gap-4">
              {Object.entries(scanData.headers).map(([header, status]) => (
                <div key={header} className="p-3 bg-gray-50 rounded-lg flex items-center gap-2">
                  <div className={`w-2 h-2 rounded-full ${status ? 'bg-green-500' : 'bg-red-500'}`} />
                  <span className="font-medium">{header}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Footer */}
          <div className="mt-8 pt-8 border-t border-gray-200 text-center text-sm text-gray-500">
            <p>Generated by WebScan Analytics - {window.location.host}</p>
            <p>This report is automatically generated and should be reviewed by security professionals</p>
          </div>
        </div>

        <div className="border-t p-4 flex justify-end gap-4">
          <button
            onClick={generatePDF}
            className="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2"
          >
            <DocumentArrowDownIcon className="w-5 h-5" />
            Download PDF
          </button>
        </div>
      </div>
    </div>
  )
}